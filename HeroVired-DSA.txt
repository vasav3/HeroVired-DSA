1. https://www.hackerrank.com/challenges/java-1d-array-introduction/problem

import java.util.*;

public class Solution {

    public static void main(String[] args) {
	   
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();
        int a[]=new int[n];
        for(int i=0;i<n;i++){
            a[i]=scan.nextInt();
        }
        
        scan.close();

        // Prints each sequential element in array a
        for (int i = 0; i < a.length; i++) {
            System.out.println(a[i]);
        }
    }
}


2. https://www.hackerrank.com/challenges/java-2d-array/problem

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;



public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        List<List<Integer>> arr = new ArrayList<>();

        for (int i=0;i<6;i++) {
            String[] arrRowTempItems = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

            List<Integer> arrRowItems = new ArrayList<>();

            for(int j=0;j<6;j++) {
                int arrItem = Integer.parseInt(arrRowTempItems[j]);
                arrRowItems.add(arrItem);
            }

            arr.add(arrRowItems);
        }
          int sum=Integer.MIN_VALUE;
    int t=0;
    for (int i=1;i<5;i++){
        for (int j=1;j<5;j++){
            t=arr.get(i).get(j)+arr.get(i-1).get(j-1)+arr.get(i-1).get(j)+arr.get(i-1).get(j+1)+arr.get(i+1).get(j-1)+arr.get(i+1).get(j)+arr.get(i+1).get(j+1);

            if(t>sum){
            sum=t;
            }
        }


    }
    System.out.println(sum);

        bufferedReader.close();
    }
}


3. https://www.hackerrank.com/challenges/java-negative-subarray/problem

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int A[]=new int[n];
        for(int i=0;i<n;i++) A[i]=sc.nextInt();
        
        int count=0;
        
        for(int i=0;i<n;i++){
            int sum=A[i];
            for(int j=i+1;j<n;j++){
                if(sum<0) count++;
                sum+=A[j];
            }
            if(sum<0) count++;
        }
        System.out.println(count);
    }
}


4. https://www.hackerrank.com/challenges/java-arraylist/problem

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner sc=new Scanner(System.in);
        
        ArrayList<ArrayList<Integer>> al=new ArrayList<>();
        
        int n=sc.nextInt();
        for(int i=0;i<n;i++){
            ArrayList<Integer> li=new ArrayList<>();
            int d=sc.nextInt();
            for(int j=0;j<d;j++){
                int a=sc.nextInt();
                li.add(a);
            }
            al.add(li);
        }
        int q=sc.nextInt();
        
        while(q-->0){
            int x=sc.nextInt();
            int y=sc.nextInt();
            if(y>al.get(x-1).size() || x-1>n) System.out.println("ERROR!");
            else System.out.println(al.get(x-1).get(y-1));
        }
    }
}


5. https://www.hackerrank.com/challenges/java-1d-array/problem

import java.util.*;

public class Solution {

    public static boolean canWin(int leap, int[] game) {
       // Return true if you can win the game; otherwise, return false.
       return solve( leap, game, 0);    
    }
    
    public static boolean solve(int leap, int ar[], int i){
        if ( i >= ar.length){
            return true;
        }
        if ( i<0||ar[i] ==1){
            return false;
        }
        ar[i] = 1;

        return solve(leap,ar,i+leap)||solve(leap,ar,i+1)||solve(leap,ar,i-1);
    }

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int q = scan.nextInt();
        while (q-- > 0) {
            int n = scan.nextInt();
            int leap = scan.nextInt();
            
            int[] game = new int[n];
            for (int i = 0; i < n; i++) {
                game[i] = scan.nextInt();
            }

            System.out.println( (canWin(leap, game)) ? "YES" : "NO" );
        }
        scan.close();
    }
}

6. https://www.hackerrank.com/challenges/java-list/problem

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        List<Integer> al=new ArrayList<>();
        for(int i=0;i<n;i++){
            int a=sc.nextInt();
            al.add(a);
        }
        int q=sc.nextInt();
        while(q-->0){
            String Q=sc.next();
            if(Q.equals("Insert")){
                int x = sc.nextInt();
                int y = sc.nextInt();
                al.add(x, y);
            }
            if(Q.equals("Delete")){
                int x = sc.nextInt();
                al.remove(x);
            }
        }
        for(int ele:al) System.out.print(ele+" ");
    }
}


7. https://www.hackerrank.com/challenges/java-stack/problem

import java.util.*;
class Solution{
    
    public static boolean checking(String st){
        Stack<Character> stack = new Stack<>();
        for(char ch: st.toCharArray()){
            if(ch == '{') stack.push('}');
            else if(ch=='(') stack.push(')');
            else if(ch=='[') stack.push(']');
            else if(stack.isEmpty() || ch!=stack.pop()) return false;
    }
    return stack.isEmpty();
}
	
	public static void main(String []argh)
	{
		Scanner sc = new Scanner(System.in);
		
		while (sc.hasNext()) {
			String s=sc.next();
            //Complete the code
            System.out.println(checking(s));
		}
		
	}
}


8. https://www.hackerrank.com/challenges/java-hashset/problem

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

 public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int t = s.nextInt();
        String [] pair_left = new String[t];
        String [] pair_right = new String[t];
        
        for (int i = 0; i < t; i++) {
            pair_left[i] = s.next();
            pair_right[i] = s.next();
        }

//Write your code here

        HashSet<String> hs=new HashSet<>();
        for (int i = 0; i < t; i++){
            hs.add(pair_left[i] + " " +pair_right[i]);
            System.out.println(hs.size());
        }

   }
}

9. https://www.hackerrank.com/challenges/java-comparator/problem

import java.util.*;

// Write your Checker class here
class Checker implements Comparator<Player>{
    public int compare(Player o1, Player o2){
        if(o1.score < o2.score) return 1;
        else if(o1.score > o2.score) return -1;
        else{
            if(o1.name.compareTo(o2.name) <= -1) return -1;
            else if (o1.name.compareTo(o2.name) >= 1) return 1;
            else return 0;
        }
    }
}


class Player{
    String name;
    int score;
    
    Player(String name, int score){
        this.name = name;
        this.score = score;
    }
}

class Solution {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();

        Player[] player = new Player[n];
        Checker checker = new Checker();
        
        for(int i = 0; i < n; i++){
            player[i] = new Player(scan.next(), scan.nextInt());
        }
        scan.close();

        Arrays.sort(player, checker);
        for(int i = 0; i < player.length; i++){
            System.out.printf("%s %s\n", player[i].name, player[i].score);
        }
    }
}

10. https://www.hackerrank.com/challenges/java-generics/problem

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        
        Object[] ar={1,2,3,"Hello","World"};
        for(Object ele:ar){
            System.out.println(ele);
        }
    }
}


11. https://www.hackerrank.com/challenges/java-sort/problem


12. https://www.hackerrank.com/challenges/java-dequeue/problem

    import java.util.*;
    public class test {
        public static void main(String[] args) {
            Scanner sc=new Scanner(System.in);
            Deque dq = new ArrayDeque<>();
            int max=Integer.MIN_VALUE;
            HashSet<Integer> hs=new HashSet<>();
            int n=sc.nextInt();
            int k=sc.nextInt();

            for(int i=0 ;i<n;i++)
            {
                int num=sc.nextInt();
                if(dq.size()<k){ 
                    dq.add(num);
                    hs.add(num);
                    max=hs.size();
                }

                else{
                    if(hs.size()>max)
                    max=hs.size();
                    Object x=dq.poll();
                    if(!dq.contains(x))
                    hs.remove(x);
                    dq.add(num);
                    hs.add(num);

                }

            }
            System.out.print(max);
        }
    }



13. https://www.hackerrank.com/challenges/java-bitset/problem

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        String[] st = new String[m];
        int[] ar1 = new int[m];
        int[] ar2 = new int[m];
        for(int i=0;i<m;i++){
            st[i] = sc.next();
            ar1[i] = sc.nextInt();
            ar2[i] = sc.nextInt();
        }
        BitSet B1 = new BitSet(n);
        BitSet B2 = new BitSet(n);
        for(int i=0;i<m;i++){
            switch(st[i]){
                case "AND":
                if(ar1[i]==1)
                    B1.and(B2);
                else
                    B2.and(B1);
                break;

                case "OR":
                if(ar1[i]==1)
                    B1.or(B2);
                else
                    B2.or(B1);
                break;

                case "XOR":
                if(ar1[i]==1)
                    B1.xor(B2);
                else
                    B2.xor(B1);
                break;

                case "FLIP":
                if(ar1[i]==1)
                    B1.flip(ar2[i]);
                else
                    B2.flip(ar2[i]);
                break;

                case "SET":
                if(ar1[i]==1)
                    B1.set(ar2[i], true);
                else
                    B2.set(ar2[i], true);
                break;
            }
            System.out.println(B1.cardinality() + " " + B2.cardinality());
        }
    }
}


14. https://www.hackerrank.com/challenges/java-priority-queue/problem

15. https://www.hackerrank.com/challenges/java-string-compare/problem



    public static String getSmallestAndLargest(String s, int k) {
        String smallest = "";
        String largest = "";
        
        // Complete the function
        // 'smallest' must be the lexicographically smallest substring of length 'k'
        // 'largest' must be the lexicographically largest substring of length 'k'
        
        for(int i=0;i<=s.length()-k;i++){
            int range = i + k;
            String st = s.substring(i,range);
            
            if(st.compareTo(largest)>0) largest=st;
            if(st.compareTo(smallest)<0) smallest=st;
            if(i==0) smallest=st;
        }
        
        return smallest + "\n" + largest;
    }



16. https://www.hackerrank.com/challenges/java-string-reverse/problem

import java.io.*;
import java.util.*;

public class Solution {
    
    public static String reverse(String A){
        String st="";

        for(int i=A.length()-1;i>=0;i--){
            st=st+A.charAt(i);
        }
        return st;
    }

    public static void main(String[] args) {
        
        Scanner sc=new Scanner(System.in);
        String A=sc.next();
        /* Enter your code here. Print output to STDOUT. */
        
        if(A.equals(reverse(A))) System.out.println("Yes");
        else System.out.println("No");
    }
}



17. https://www.hackerrank.com/challenges/java-anagrams/problem

import java.util.Scanner;

public class Solution {
    
    static boolean isAnagram(String a, String b) {
        // Complete the function
         if(a.length()!=b.length()) return false;
        char[] ar1=a.toLowerCase().toCharArray();
        char[] ar2=b.toLowerCase().toCharArray();
        
        java.util.Arrays.sort(ar1);
        java.util.Arrays.sort(ar2);
        return java.util.Arrays.equals(ar1,ar2);
    }

  public static void main(String[] args) {
    
        Scanner scan = new Scanner(System.in);
        String a = scan.next();
        String b = scan.next();
        scan.close();
        boolean ret = isAnagram(a, b);
        System.out.println( (ret) ? "Anagrams" : "Not Anagrams" );
    }
}


18. https://www.hackerrank.com/challenges/java-string-tokens/problem

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String st = sc.nextLine().trim();
        if(st.length()==0){
            System.out.println("0");
            return;
        }
        
        String words[] = st.split("[\\s+ !,?._'@]+");
        
        System.out.println(words.length);
        
        for(String ele:words) System.out.println(ele);
    }
}

19. https://www.hackerrank.com/challenges/pattern-syntax-checker/problem

import java.util.Scanner;
import java.util.regex.*;

public class Solution
{
	public static void main(String[] args){
		Scanner sc = new Scanner (System.in);
        int cases = Integer.parseInt(sc.nextLine());

        while (cases > 0 && sc.hasNextLine()) {
            String patternRegex = sc.nextLine();
            try {
                Pattern st = Pattern.compile(patternRegex);
                System.out.println("Valid");
            }
            catch (PatternSyntaxException e) {
                System.out.println("Invalid");
            }
        }
	}
}





20. https://www.hackerrank.com/challenges/java-regex/problem

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Scanner;

class Solution{

    public static void main(String[] args){
        Scanner in = new Scanner(System.in);
        while(in.hasNext()){
            String IP = in.next();
            System.out.println(IP.matches(new MyRegex().pattern));
        }

    }
}

//Write your code here
class MyRegex{
    public static String zeroTo255 = "(\\d{1,2}|(0|1)\\" + "d{2}|2[0-4]\\d|25[0-5])";  
    public static String pattern = zeroTo255 + "\\."+ zeroTo255 + "\\." + zeroTo255 + "\\." + zeroTo255;
    
    Pattern p = Pattern.compile(pattern);
         
}


21. https://www.hackerrank.com/challenges/duplicate-word/problem

import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class DuplicateWords {

    public static void main(String[] args) {

        String regex =  "\\b(\\w+)(?:\\W+\\1\\b)+";
        Pattern p = Pattern.compile(regex,Pattern.CASE_INSENSITIVE);

        Scanner in = new Scanner(System.in);
        int numSentences = Integer.parseInt(in.nextLine());
        
        while (numSentences-- > 0) {
            String input = in.nextLine();
            
            Matcher m = p.matcher(input);
            
            // Check for subsequences of input that match the compiled pattern
             while (m.find()) {
            input = input.replaceAll(m.group(),m.group(1));
        }
            // Prints the modified sentence.
            System.out.println(input);
        }
        
        in.close();
    }
}


22. https://www.hackerrank.com/challenges/valid-username-checker/problem

import java.util.Scanner;
class UsernameValidator {
    static {
        regularExpression="[a-zA-Z]{1}[\\w]{7,29}";
    }
        
    public static final String regularExpression;
}


public class Solution {
    private static final Scanner scan = new Scanner(System.in);
    
    public static void main(String[] args) {
        int n = Integer.parseInt(scan.nextLine());
        while (n-- != 0) {
            String userName = scan.nextLine();

            if (userName.matches(UsernameValidator.regularExpression)) {
                System.out.println("Valid");
            } else {
                System.out.println("Invalid");
            }           
        }
    }
}

23. https://www.hackerrank.com/challenges/java-primality-test/problem

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;



public class Solution {
    public static void main(String[] args) throws IOException {
        Scanner sc = new Scanner(System.in);
        System.out.println(sc.nextBigInteger().isProbablePrime(100) ? "prime" : "not prime");
        sc.close();
    }
}

 
24. https://www.hackerrank.com/challenges/java-currency-formatter/problem

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double payment = scanner.nextDouble();
        scanner.close();

        // Write your code here.
                //USA
        NumberFormat nfu = NumberFormat.getCurrencyInstance(Locale.US);
        String us = nfu.format(payment);
        //INDIA
        DecimalFormatSymbols formatIn = new DecimalFormatSymbols();
        formatIn.setCurrencySymbol("Rs.");
        NumberFormat nfi = NumberFormat.getCurrencyInstance(new Locale("EN", "India"));
        if (nfi instanceof DecimalFormat) {
            ((DecimalFormat) nfi).setDecimalFormatSymbols(formatIn);
        }
        String india = nfi.format(payment);
        //CHINA
        DecimalFormatSymbols formatCn = new DecimalFormatSymbols();
        formatCn.setCurrencySymbol("\uFFE5");
        NumberFormat nfc = NumberFormat.getCurrencyInstance(Locale.CHINA);
        if (nfc instanceof DecimalFormat) {
            ((DecimalFormat) nfc).setDecimalFormatSymbols(formatCn);
        }
        String china = nfc.format(payment);
        //FRANCE
        NumberFormat nff = NumberFormat.getCurrencyInstance(Locale.FRANCE);
        String france = nff.format(payment);

        
        
        System.out.println("US: " + us);
        System.out.println("India: " + india);
        System.out.println("China: " + china);
        System.out.println("France: " + france);
    }
}

 
25. https://www.hackerrank.com/challenges/tag-content-extractor/problem

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution{
	public static void main(String[] args){
		
		Scanner in = new Scanner(System.in);
		int testCases = Integer.parseInt(in.nextLine());
              while(testCases>0 && in.hasNext()){
            String line = in.nextLine();
            
            Matcher matcher = Pattern.compile("<(.+)>(([^<>]+))</\\1>").matcher(line);  
            
              if (matcher.find() == false) {  
                System.out.println("None");  
                continue;  
            }
            
            matcher.reset();  
             
            while (matcher.find() == true){  
                System.out.println(matcher.group(2));  
            }  
        } 
           
        in.close();
              
			
			testCases--;
	}
}


















